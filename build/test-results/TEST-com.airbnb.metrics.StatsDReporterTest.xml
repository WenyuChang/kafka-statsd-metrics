<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.airbnb.metrics.StatsDReporterTest" tests="7" skipped="0" failures="1" errors="0" timestamp="2017-06-22T05:47:04" hostname="WenyudeMacBook-Pro.local" time="0.187">
  <properties/>
  <testcase name="stringGauge" classname="com.airbnb.metrics.StatsDReporterTest" time="0.11">
    <failure message="org.mockito.exceptions.verification.NeverWantedButInvoked: &#10;statsD.gauge(&lt;any&gt;, &lt;any&gt;);&#10;Never wanted here:&#10;-&gt; at com.airbnb.metrics.StatsDReporterTest.stringGauge(StatsDReporterTest.java:226)&#10;But invoked here:&#10;-&gt; at com.airbnb.metrics.StatsDReporter.processGauge(StatsDReporter.java:215)&#10;" type="org.mockito.exceptions.verification.NeverWantedButInvoked">org.mockito.exceptions.verification.NeverWantedButInvoked: 
statsD.gauge(&lt;any&gt;, &lt;any&gt;);
Never wanted here:
-&gt; at com.airbnb.metrics.StatsDReporterTest.stringGauge(StatsDReporterTest.java:226)
But invoked here:
-&gt; at com.airbnb.metrics.StatsDReporter.processGauge(StatsDReporter.java:215)

	at com.airbnb.metrics.StatsDReporterTest.stringGauge(StatsDReporterTest.java:226)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:86)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:49)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:69)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:105)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:355)
	at org.gradle.internal.concurrent.DefaultExecutorFactory$StoppableExecutorImpl$1.run(DefaultExecutorFactory.java:64)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
</failure>
  </testcase>
  <testcase name="meter" classname="com.airbnb.metrics.StatsDReporterTest" time="0.028"/>
  <testcase name="longGauge" classname="com.airbnb.metrics.StatsDReporterTest" time="0.004"/>
  <testcase name="timer" classname="com.airbnb.metrics.StatsDReporterTest" time="0.02"/>
  <testcase name="isTaggedTest" classname="com.airbnb.metrics.StatsDReporterTest" time="0.002"/>
  <testcase name="counter" classname="com.airbnb.metrics.StatsDReporterTest" time="0.011"/>
  <testcase name="histogram" classname="com.airbnb.metrics.StatsDReporterTest" time="0.011"/>
  <system-out><![CDATA[DEBUG [Test worker] (StatsDReporter.java:160) -   MBeanName["java.lang":type="Object",name="metric"], Group[java.lang], Name[metric], Scope[null], Type[Object]
DEBUG [Test worker] (StatsDReporter.java:202) - Gauge can only record long or double metric, it is class java.lang.String
DEBUG [Test worker] (StatsDReporter.java:160) -   MBeanName["java.lang":type="Object",name="metric"], Group[java.lang], Name[metric], Scope[null], Type[Object]
DEBUG [Test worker] (StatsDReporter.java:160) -   MBeanName["java.lang":type="Object",name="metric"], Group[java.lang], Name[metric], Scope[null], Type[Object]
DEBUG [Test worker] (StatsDReporter.java:160) -   MBeanName["java.lang":type="Object",name="metric"], Group[java.lang], Name[metric], Scope[null], Type[Object]
DEBUG [Test worker] (StatsDReporter.java:160) -   MBeanName["java.lang":type="Object",name="metric"], Group[java.lang], Name[metric], Scope[null], Type[Object]
DEBUG [Test worker] (StatsDReporter.java:160) -   MBeanName["java.lang":type="Object",name="metric"], Group[java.lang], Name[metric], Scope[null], Type[Object]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
